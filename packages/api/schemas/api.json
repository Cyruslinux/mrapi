{"$ref":"api#/definitions/api.Options","definitions":{"api.Options":{"title":"api.Options","type":"object","properties":{"server":{"$ref":"api#/definitions/mrapi.api.ServerOptions","title":"server"},"openapi":{"$ref":"api#/definitions/mrapi.api.OpenapiOptions","title":"openapi"},"graphql":{"$ref":"api#/definitions/mrapi.api.GraphqlOptions","title":"graphql"},"autoGenerate":{"type":"boolean","title":"autoGenerate"},"tenantIdentity":{"type":"string","title":"tenantIdentity"},"schemaIdentity":{"type":"string","title":"schemaIdentity"},"schemaNames":{"type":"array","items":{"type":"string"},"title":"schemaNames"},"logger":{"title":"logger"},"service":{"$ref":"api#/definitions/api.MeshConfig","title":"service"},"meshConfigOuputPath":{"type":"string","title":"meshConfigOuputPath"}},"additionalProperties":false},"mrapi.api.ServerOptions":{"title":"mrapi.api.ServerOptions","$ref":"api#/definitions/api.ServerOptions"},"api.ServerOptions":{"title":"api.ServerOptions","type":"object","properties":{"type":{"$ref":"api#/definitions/mrapi.api.ServerType","title":"type"},"host":{"type":"string","title":"host"},"port":{"type":"number","title":"port"},"endpoint":{"type":"object","properties":{"graphql":{"type":"string","title":"graphql"},"openapi":{"type":"string","title":"openapi"}},"additionalProperties":false,"title":"endpoint"},"options":{"type":"object","additionalProperties":{},"title":"options"},"plugins":{"type":"object","additionalProperties":{"type":"object","properties":{}},"title":"plugins"}},"additionalProperties":false},"mrapi.api.ServerType":{"title":"mrapi.api.ServerType","enum":["combined","standalone"],"type":"string"},"mrapi.api.OpenapiOptions":{"title":"mrapi.api.OpenapiOptions","$ref":"api#/definitions/api.OpenapiOptions"},"api.OpenapiOptions":{"title":"api.OpenapiOptions","type":"object","properties":{"dir":{"type":"string","title":"dir"},"prefix":{"type":"string","title":"prefix"},"dalBaseUrl":{"type":"string","title":"dalBaseUrl"}},"additionalProperties":false},"mrapi.api.GraphqlOptions":{"title":"mrapi.api.GraphqlOptions","$ref":"api#/definitions/api.GraphqlOptions"},"api.GraphqlOptions":{"title":"api.GraphqlOptions","type":"object","additionalProperties":{},"properties":{"dir":{"type":"string","title":"dir"}}},"api.MeshConfig":{"title":"api.MeshConfig","$ref":"api#/definitions/api.MeshConfig_1"},"api.MeshConfig_1":{"title":"api.MeshConfig_1","type":"object","properties":{"serve":{"$ref":"api#/definitions/ServeConfig","title":"serve"},"require":{"type":"array","items":{"type":"string"},"title":"require"},"sources":{"description":"Defines the list of your external data sources for your API mesh","type":"array","items":{"$ref":"api#/definitions/Source"},"title":"sources"},"transforms":{"description":"Transform to apply to the unified mesh schema","type":"array","items":{"$ref":"api#/definitions/Transform"},"title":"transforms"},"additionalTypeDefs":{"description":"Additional type definitions, or type definitions overrides you wish to add to the schema mesh","type":"string","title":"additionalTypeDefs"},"additionalResolvers":{"description":"Additional resolvers, or resolvers overrides you wish to add to the schema mesh (Any of: String, AdditionalStitchingResolverObject, AdditionalSubscriptionObject)","type":"array","items":{"anyOf":[{"$ref":"api#/definitions/AdditionalStitchingResolverObject"},{"$ref":"api#/definitions/AdditionalSubscriptionObject"},{"type":"string"}]},"title":"additionalResolvers"},"cache":{"$ref":"api#/definitions/Cache","title":"cache"},"merger":{"description":"Merge method","type":"string","title":"merger"},"pubsub":{"description":"PubSub Implementation (Any of: String, PubSubConfig)","anyOf":[{"$ref":"api#/definitions/PubSubConfig"},{"type":"string"}],"title":"pubsub"}},"additionalProperties":false,"required":["sources"]},"ServeConfig":{"title":"ServeConfig","$ref":"api#/definitions/ServeConfig_1"},"ServeConfig_1":{"title":"ServeConfig_1","type":"object","properties":{"fork":{"description":"Spawn multiple server instances as node clusters (default: `1`) (Any of: Int, Boolean)","type":["number","boolean"],"title":"fork"},"port":{"description":"TCP Port to listen (default: `3000`) (Any of: Int, String)","type":["string","number"],"title":"port"},"exampleQuery":{"description":"Provide an example query or queries for GraphQL Playground","type":"string","title":"exampleQuery"},"cors":{"$ref":"api#/definitions/CorsConfig","title":"cors"},"handlers":{"description":"Any of: WebhookHandler, ExpressHandler","type":"array","items":{"anyOf":[{"$ref":"api#/definitions/WebhookHandler"},{"$ref":"api#/definitions/ExpressHandler"}]},"title":"handlers"},"staticFiles":{"type":"string","title":"staticFiles"}},"additionalProperties":false},"CorsConfig":{"title":"CorsConfig","$ref":"api#/definitions/CorsConfig_1"},"CorsConfig_1":{"title":"CorsConfig_1","type":"object","properties":{"origin":{"type":"array","items":{"type":"string"},"title":"origin"},"allowedHeaders":{"type":"array","items":{"type":"string"},"title":"allowedHeaders"},"exposedHeaders":{"type":"array","items":{"type":"string"},"title":"exposedHeaders"},"credentials":{"type":"boolean","title":"credentials"},"maxAge":{"type":"number","title":"maxAge"},"preflightContinue":{"type":"boolean","title":"preflightContinue"},"optionsSuccessStatus":{"type":"number","title":"optionsSuccessStatus"}},"additionalProperties":false},"WebhookHandler":{"title":"WebhookHandler","type":"object","properties":{"path":{"type":"string","title":"path"},"pubsubTopic":{"type":"string","title":"pubsubTopic"},"payload":{"type":"string","title":"payload"}},"additionalProperties":false,"required":["path","pubsubTopic"]},"ExpressHandler":{"title":"ExpressHandler","type":"object","properties":{"path":{"type":"string","title":"path"},"handler":{"type":"string","title":"handler"},"method":{"description":"Allowed values: GET, POST, DELETE, PATCH","enum":["DELETE","GET","PATCH","POST"],"type":"string","title":"method"}},"additionalProperties":false,"required":["handler","path"]},"Source":{"title":"Source","type":"object","properties":{"name":{"description":"The name you wish to set to your remote API, this will be used for building the GraphQL context","type":"string","title":"name"},"handler":{"$ref":"api#/definitions/Handler","title":"handler"},"transforms":{"description":"List of transforms to apply to the current API source, before unifying it with the rest of the sources","type":"array","items":{"$ref":"api#/definitions/Transform"},"title":"transforms"}},"additionalProperties":false,"required":["handler","name"]},"Handler":{"description":"Point to the handler you wish to use, it can either be a predefined handler, or a custom","title":"Handler","type":"object","additionalProperties":{},"properties":{"graphql":{"$ref":"api#/definitions/GraphQLHandler","title":"graphql"},"grpc":{"$ref":"api#/definitions/GrpcHandler","title":"grpc"},"jsonSchema":{"$ref":"api#/definitions/JsonSchemaHandler","title":"jsonSchema"},"mongoose":{"$ref":"api#/definitions/MongooseHandler","title":"mongoose"},"mysql":{"$ref":"api#/definitions/MySQLHandler","title":"mysql"},"neo4j":{"$ref":"api#/definitions/Neo4JHandler","title":"neo4j"},"odata":{"$ref":"api#/definitions/ODataHandler","title":"odata"},"openapi":{"$ref":"api#/definitions/OpenapiHandler","title":"openapi"},"postgraphile":{"$ref":"api#/definitions/PostGraphileHandler","title":"postgraphile"},"soap":{"$ref":"api#/definitions/SoapHandler","title":"soap"},"thrift":{"$ref":"api#/definitions/ThriftHandler","title":"thrift"},"tuql":{"$ref":"api#/definitions/TuqlHandler","title":"tuql"}}},"GraphQLHandler":{"description":"Handler for remote/local/third-party GraphQL schema","title":"GraphQLHandler","$ref":"api#/definitions/GraphQLHandler_1"},"GraphQLHandler_1":{"description":"Handler for remote/local/third-party GraphQL schema","title":"GraphQLHandler_1","type":"object","properties":{"endpoint":{"description":"A url to your remote GraphQL endpoint","type":"string","title":"endpoint"},"schemaHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls only for schema introspection","type":"object","additionalProperties":{},"title":"schemaHeaders"},"operationHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls only for operation during runtime","type":"object","additionalProperties":{},"title":"operationHeaders"},"useGETForQueries":{"description":"Use HTTP GET for Query operations","type":"boolean","title":"useGETForQueries"},"method":{"description":"HTTP method used for GraphQL operations (Allowed values: GET, POST)","enum":["GET","POST"],"type":"string","title":"method"},"enableSubscriptions":{"description":"Enable GraphQL Subscriptions using WebSocket","type":"boolean","title":"enableSubscriptions"},"customFetch":{"description":"Path to a custom W3 Compatible Fetch Implementation","title":"customFetch"},"webSocketImpl":{"description":"Path to a custom W3 Compatible WebSocket Implementation","type":"string","title":"webSocketImpl"},"introspection":{"description":"Path to the introspection\nYou can seperately give schema introspection","type":"string","title":"introspection"},"cacheIntrospection":{"description":"Cache Introspection (Any of: GraphQLIntrospectionCachingOptions, Boolean)","anyOf":[{"$ref":"api#/definitions/GraphQLIntrospectionCachingOptions"},{"type":"boolean"}],"title":"cacheIntrospection"}},"additionalProperties":false,"required":["endpoint"]},"GraphQLIntrospectionCachingOptions":{"title":"GraphQLIntrospectionCachingOptions","type":"object","properties":{"ttl":{"description":"Time to live of introspection cache","type":"number","title":"ttl"},"path":{"description":"Path to Introspection JSON File","type":"string","title":"path"}},"additionalProperties":false},"GrpcHandler":{"description":"Handler for gRPC and Protobuf schemas","title":"GrpcHandler","$ref":"api#/definitions/GrpcHandler_1"},"GrpcHandler_1":{"description":"Handler for gRPC and Protobuf schemas","title":"GrpcHandler_1","type":"object","properties":{"endpoint":{"description":"gRPC Endpoint","type":"string","title":"endpoint"},"protoFilePath":{"description":"gRPC Proto file that contains your protobuf schema (Any of: ProtoFilePath, String)","anyOf":[{"$ref":"api#/definitions/ProtoFilePath"},{"type":"string"}],"title":"protoFilePath"},"serviceName":{"description":"Your base service name\nUsed for naming only","type":"string","title":"serviceName"},"packageName":{"description":"Your base package name\nUsed for naming only","type":"string","title":"packageName"},"requestTimeout":{"description":"Request timeout in milliseconds\nDefault: 200000","type":"number","title":"requestTimeout"},"credentialsSsl":{"$ref":"api#/definitions/GrpcCredentialsSsl","title":"credentialsSsl"},"useHTTPS":{"description":"Use https instead of http for gRPC connection","type":"boolean","title":"useHTTPS"},"metaData":{"description":"MetaData","type":"object","additionalProperties":{},"title":"metaData"}},"additionalProperties":false,"required":["endpoint","protoFilePath"]},"ProtoFilePath":{"title":"ProtoFilePath","type":"object","properties":{"file":{"type":"string","title":"file"},"load":{"$ref":"api#/definitions/LoadOptions","title":"load"}},"additionalProperties":false,"required":["file"]},"LoadOptions":{"title":"LoadOptions","$ref":"api#/definitions/LoadOptions_1"},"LoadOptions_1":{"title":"LoadOptions_1","type":"object","properties":{"includeDirs":{"type":"array","items":{"type":"string"},"title":"includeDirs"}},"additionalProperties":false},"GrpcCredentialsSsl":{"description":"SSL Credentials","title":"GrpcCredentialsSsl","$ref":"api#/definitions/GrpcCredentialsSsl_1"},"GrpcCredentialsSsl_1":{"description":"SSL Credentials","title":"GrpcCredentialsSsl_1","type":"object","properties":{"rootCA":{"type":"string","title":"rootCA"},"certChain":{"type":"string","title":"certChain"},"privateKey":{"type":"string","title":"privateKey"}},"additionalProperties":false},"JsonSchemaHandler":{"description":"Handler for JSON Schema specification. Source could be a local json file, or a url to it.","title":"JsonSchemaHandler","$ref":"api#/definitions/JsonSchemaHandler_1"},"JsonSchemaHandler_1":{"description":"Handler for JSON Schema specification. Source could be a local json file, or a url to it.","title":"JsonSchemaHandler_1","type":"object","properties":{"baseUrl":{"type":"string","title":"baseUrl"},"operationHeaders":{"type":"object","additionalProperties":{},"title":"operationHeaders"},"schemaHeaders":{"type":"object","additionalProperties":{},"title":"schemaHeaders"},"operations":{"type":"array","items":{"$ref":"api#/definitions/JsonSchemaOperation"},"title":"operations"},"disableTimestampScalar":{"type":"boolean","title":"disableTimestampScalar"}},"additionalProperties":false,"required":["baseUrl","operations"]},"JsonSchemaOperation":{"title":"JsonSchemaOperation","type":"object","properties":{"field":{"type":"string","title":"field"},"path":{"type":"string","title":"path"},"pubsubTopic":{"type":"string","title":"pubsubTopic"},"description":{"type":"string","title":"description"},"type":{"description":"Allowed values: Query, Mutation, Subscription","enum":["Mutation","Query","Subscription"],"type":"string","title":"type"},"method":{"description":"Allowed values: GET, DELETE, POST, PUT, PATCH","enum":["DELETE","GET","PATCH","POST","PUT"],"type":"string","title":"method"},"requestSchema":{"title":"requestSchema"},"requestSample":{"title":"requestSample"},"requestTypeName":{"type":"string","title":"requestTypeName"},"responseSample":{"title":"responseSample"},"responseSchema":{"title":"responseSchema"},"responseTypeName":{"type":"string","title":"responseTypeName"},"argTypeMap":{"type":"object","additionalProperties":{},"title":"argTypeMap"},"headers":{"type":"object","additionalProperties":{},"title":"headers"}},"additionalProperties":false,"required":["field","method","type"]},"MongooseHandler":{"title":"MongooseHandler","$ref":"api#/definitions/MongooseHandler_1"},"MongooseHandler_1":{"title":"MongooseHandler_1","type":"object","properties":{"connectionString":{"type":"string","title":"connectionString"},"models":{"type":"array","items":{"$ref":"api#/definitions/MongooseModel"},"title":"models"},"discriminators":{"type":"array","items":{"$ref":"api#/definitions/MongooseModel"},"title":"discriminators"}},"additionalProperties":false},"MongooseModel":{"title":"MongooseModel","type":"object","properties":{"name":{"type":"string","title":"name"},"path":{"type":"string","title":"path"},"options":{"$ref":"api#/definitions/ComposeWithMongooseOpts","title":"options"}},"additionalProperties":false,"required":["name","path"]},"ComposeWithMongooseOpts":{"title":"ComposeWithMongooseOpts","$ref":"api#/definitions/ComposeWithMongooseOpts_1"},"ComposeWithMongooseOpts_1":{"title":"ComposeWithMongooseOpts_1","type":"object","properties":{"name":{"type":"string","title":"name"},"description":{"type":"string","title":"description"},"fields":{"$ref":"api#/definitions/ComposeWithMongooseFieldsOpts","title":"fields"},"inputType":{"$ref":"api#/definitions/ComposeMongooseInputType","title":"inputType"},"resolvers":{"$ref":"api#/definitions/TypeConverterResolversOpts1","title":"resolvers"}},"additionalProperties":false},"ComposeWithMongooseFieldsOpts":{"title":"ComposeWithMongooseFieldsOpts","$ref":"api#/definitions/ComposeWithMongooseFieldsOpts_1"},"ComposeWithMongooseFieldsOpts_1":{"title":"ComposeWithMongooseFieldsOpts_1","type":"object","properties":{"only":{"type":"array","items":{"type":"string"},"title":"only"},"remove":{"type":"array","items":{"type":"string"},"title":"remove"},"required":{"type":"array","items":{"type":"string"},"title":"required"}},"additionalProperties":false},"ComposeMongooseInputType":{"title":"ComposeMongooseInputType","$ref":"api#/definitions/ComposeMongooseInputType_1"},"ComposeMongooseInputType_1":{"title":"ComposeMongooseInputType_1","type":"object","properties":{"name":{"type":"string","title":"name"},"description":{"type":"string","title":"description"},"fields":{"$ref":"api#/definitions/ComposeWithMongooseFieldsOpts1","title":"fields"},"resolvers":{"$ref":"api#/definitions/TypeConverterResolversOpts","title":"resolvers"}},"additionalProperties":false},"ComposeWithMongooseFieldsOpts1":{"title":"ComposeWithMongooseFieldsOpts1","$ref":"api#/definitions/ComposeWithMongooseFieldsOpts1_1"},"ComposeWithMongooseFieldsOpts1_1":{"title":"ComposeWithMongooseFieldsOpts1_1","type":"object","properties":{"only":{"type":"array","items":{"type":"string"},"title":"only"},"remove":{"type":"array","items":{"type":"string"},"title":"remove"},"required":{"type":"array","items":{"type":"string"},"title":"required"}},"additionalProperties":false},"TypeConverterResolversOpts":{"title":"TypeConverterResolversOpts","$ref":"api#/definitions/TypeConverterResolversOpts_1"},"TypeConverterResolversOpts_1":{"title":"TypeConverterResolversOpts_1","type":"object","properties":{"findById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findById"},"findByIds":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findByIds"},"findOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findOne"},"findMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findMany"},"updateById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"updateById"},"updateOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"updateOne"},"updateMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"updateMany"},"removeById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"removeById"},"removeOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"removeOne"},"removeMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"removeMany"},"createOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"createOne"},"createMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"createMany"},"count":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"count"},"connection":{"description":"Any of: Boolean, JSON","anyOf":[{"type":"object","additionalProperties":{}},{"type":"boolean"}],"title":"connection"},"pagination":{"description":"Any of: Boolean, PaginationResolverOpts","anyOf":[{"$ref":"api#/definitions/PaginationResolverOpts"},{"type":"boolean"}],"title":"pagination"}},"additionalProperties":false},"ComposeWithMongooseResolverOpts":{"title":"ComposeWithMongooseResolverOpts","type":"object","properties":{"filter":{"$ref":"api#/definitions/FilterHelperArgsOpts","title":"filter"},"sort":{"$ref":"api#/definitions/SortHelperArgsOpts","title":"sort"},"limit":{"$ref":"api#/definitions/LimitHelperArgsOpts","title":"limit"},"record":{"$ref":"api#/definitions/RecordHelperArgsOpts","title":"record"},"skip":{"type":"boolean","title":"skip"}},"additionalProperties":false},"FilterHelperArgsOpts":{"title":"FilterHelperArgsOpts","$ref":"api#/definitions/FilterHelperArgsOpts_1"},"FilterHelperArgsOpts_1":{"title":"FilterHelperArgsOpts_1","type":"object","properties":{"filterTypeName":{"type":"string","title":"filterTypeName"},"isRequired":{"type":"boolean","title":"isRequired"},"onlyIndexed":{"type":"boolean","title":"onlyIndexed"},"requiredFields":{"type":"array","items":{"type":"string"},"title":"requiredFields"},"operators":{"description":"Any of: Boolean, JSON","anyOf":[{"type":"object","additionalProperties":{}},{"type":"boolean"}],"title":"operators"},"removeFields":{"type":"array","items":{"type":"string"},"title":"removeFields"}},"additionalProperties":false},"SortHelperArgsOpts":{"title":"SortHelperArgsOpts","$ref":"api#/definitions/SortHelperArgsOpts_1"},"SortHelperArgsOpts_1":{"title":"SortHelperArgsOpts_1","type":"object","properties":{"sortTypeName":{"type":"string","title":"sortTypeName"}},"additionalProperties":false},"LimitHelperArgsOpts":{"title":"LimitHelperArgsOpts","$ref":"api#/definitions/LimitHelperArgsOpts_1"},"LimitHelperArgsOpts_1":{"title":"LimitHelperArgsOpts_1","type":"object","properties":{"defaultValue":{"type":"number","title":"defaultValue"}},"additionalProperties":false},"RecordHelperArgsOpts":{"title":"RecordHelperArgsOpts","$ref":"api#/definitions/RecordHelperArgsOpts_1"},"RecordHelperArgsOpts_1":{"title":"RecordHelperArgsOpts_1","type":"object","properties":{"recordTypeName":{"type":"string","title":"recordTypeName"},"isRequired":{"type":"boolean","title":"isRequired"},"removeFields":{"type":"array","items":{"type":"string"},"title":"removeFields"},"requiredFields":{"type":"array","items":{"type":"string"},"title":"requiredFields"}},"additionalProperties":false},"PaginationResolverOpts":{"title":"PaginationResolverOpts","type":"object","properties":{"perPage":{"type":"number","title":"perPage"}},"additionalProperties":false},"TypeConverterResolversOpts1":{"title":"TypeConverterResolversOpts1","$ref":"api#/definitions/TypeConverterResolversOpts1_1"},"TypeConverterResolversOpts1_1":{"title":"TypeConverterResolversOpts1_1","type":"object","properties":{"findById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findById"},"findByIds":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findByIds"},"findOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findOne"},"findMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"findMany"},"updateById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"updateById"},"updateOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"updateOne"},"updateMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"updateMany"},"removeById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"removeById"},"removeOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"removeOne"},"removeMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"removeMany"},"createOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"createOne"},"createMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"createMany"},"count":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"api#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}],"title":"count"},"connection":{"description":"Any of: Boolean, JSON","anyOf":[{"type":"object","additionalProperties":{}},{"type":"boolean"}],"title":"connection"},"pagination":{"description":"Any of: Boolean, PaginationResolverOpts","anyOf":[{"$ref":"api#/definitions/PaginationResolverOpts"},{"type":"boolean"}],"title":"pagination"}},"additionalProperties":false},"MySQLHandler":{"title":"MySQLHandler","$ref":"api#/definitions/MySQLHandler_1"},"MySQLHandler_1":{"title":"MySQLHandler_1","type":"object","properties":{"host":{"type":"string","title":"host"},"port":{"type":"number","title":"port"},"user":{"type":"string","title":"user"},"password":{"type":"string","title":"password"},"database":{"type":"string","title":"database"}},"additionalProperties":false,"required":["database","host","port","user"]},"Neo4JHandler":{"description":"Handler for Neo4j","title":"Neo4JHandler","$ref":"api#/definitions/Neo4JHandler_1"},"Neo4JHandler_1":{"description":"Handler for Neo4j","title":"Neo4JHandler_1","type":"object","properties":{"url":{"description":"URL for the Neo4j Instance e.g. neo4j://localhost","type":"string","title":"url"},"username":{"description":"Username for basic authentication","type":"string","title":"username"},"password":{"description":"Password for basic authentication","type":"string","title":"password"},"alwaysIncludeRelationships":{"description":"Specifies whether relationships should always be included in the type definitions as [relationship](https://grandstack.io/docs/neo4j-graphql-js.html#relationship-types) types, even if the relationships do not have properties.","type":"boolean","title":"alwaysIncludeRelationships"},"database":{"description":"Specifies database name","type":"string","title":"database"},"typeDefs":{"description":"Provide GraphQL Type Definitions instead of inferring","type":"string","title":"typeDefs"},"cacheIntrospection":{"description":"Cache Introspection (Any of: Neo4jIntrospectionCachingOptions, Boolean)","anyOf":[{"$ref":"api#/definitions/Neo4JIntrospectionCachingOptions"},{"type":"boolean"}],"title":"cacheIntrospection"}},"additionalProperties":false,"required":["password","url","username"]},"Neo4JIntrospectionCachingOptions":{"title":"Neo4JIntrospectionCachingOptions","type":"object","properties":{"ttl":{"description":"Time to live of introspection cache","type":"number","title":"ttl"}},"additionalProperties":false},"ODataHandler":{"description":"Handler for OData","title":"ODataHandler","$ref":"api#/definitions/ODataHandler_1"},"ODataHandler_1":{"description":"Handler for OData","title":"ODataHandler_1","type":"object","properties":{"baseUrl":{"description":"Base URL for OData API","type":"string","title":"baseUrl"},"metadata":{"description":"Custom $metadata File or URL","type":"string","title":"metadata"},"operationHeaders":{"description":"Headers to be used with the operation requests","type":"object","additionalProperties":{},"title":"operationHeaders"},"schemaHeaders":{"description":"Headers to be used with the $metadata requests","type":"object","additionalProperties":{},"title":"schemaHeaders"},"batch":{"description":"Enable batching (Allowed values: multipart, json)","enum":["json","multipart"],"type":"string","title":"batch"},"expandNavProps":{"description":"Use $expand for navigation props instead of seperate HTTP requests (Default: false)","type":"boolean","title":"expandNavProps"}},"additionalProperties":false,"required":["baseUrl"]},"OpenapiHandler":{"description":"Handler for Swagger / OpenAPI 2/3 specification. Source could be a local json/swagger file, or a url to it.","title":"OpenapiHandler","$ref":"api#/definitions/OpenapiHandler_1"},"OpenapiHandler_1":{"description":"Handler for Swagger / OpenAPI 2/3 specification. Source could be a local json/swagger file, or a url to it.","title":"OpenapiHandler_1","type":"object","properties":{"source":{"description":"A pointer to your API source - could be a local file, remote file or url endpoint","type":"string","title":"source"},"sourceFormat":{"description":"Format of the source file (Allowed values: json, yaml)","enum":["json","yaml"],"type":"string","title":"sourceFormat"},"operationHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls","type":"object","additionalProperties":{},"title":"operationHeaders"},"schemaHeaders":{"description":"If you are using a remote URL endpoint to fetch your schema, you can set headers for the HTTP request to fetch your schema.","type":"object","additionalProperties":{},"title":"schemaHeaders"},"baseUrl":{"description":"Specifies the URL on which all paths will be based on.\nOverrides the server object in the OAS.","type":"string","title":"baseUrl"},"qs":{"description":"JSON object representing the query search parameters to add to the API calls","type":"object","additionalProperties":{},"title":"qs"},"customFetch":{"description":"W3 Compatible Fetch Implementation","title":"customFetch"},"includeHttpDetails":{"description":"Include HTTP Response details to the result object","type":"boolean","title":"includeHttpDetails"}},"additionalProperties":false,"required":["source"]},"PostGraphileHandler":{"description":"Handler for Postgres database, based on `postgraphile`","title":"PostGraphileHandler","$ref":"api#/definitions/PostGraphileHandler_1"},"PostGraphileHandler_1":{"description":"Handler for Postgres database, based on `postgraphile`","title":"PostGraphileHandler_1","type":"object","properties":{"connectionString":{"description":"A connection string to your Postgres database","type":"string","title":"connectionString"},"schemaName":{"description":"An array of strings which specifies the PostgreSQL schemas that PostGraphile will use to create a GraphQL schema. The default schema is the public schema.","type":"array","items":{"type":"string"},"title":"schemaName"},"pool":{"description":"Connection Pool settings","type":"object","additionalProperties":{},"title":"pool"},"appendPlugins":{"description":"Extra Postgraphile Plugins to append","type":"array","items":{"type":"string"},"title":"appendPlugins"},"skipPlugins":{"description":"Postgraphile Plugins to skip (e.g. \"graphile-build#NodePlugin\")","type":"array","items":{"type":"string"},"title":"skipPlugins"},"options":{"description":"Extra Postgraphile options that will be added to the postgraphile constructor. It can either be an object or a string pointing to the object's path (e.g. \"./my-config#options\"). See the [postgraphile docs](https://www.graphile.org/postgraphile/usage-library/) for more information. (Any of: JSON, String)","anyOf":[{"type":"object","additionalProperties":{}},{"type":"string"}],"title":"options"},"cacheIntrospection":{"description":"Cache Introspection (Any of: GraphQLIntrospectionCachingOptions, Boolean)","anyOf":[{"$ref":"api#/definitions/GraphQLIntrospectionCachingOptions"},{"type":"boolean"}],"title":"cacheIntrospection"}},"additionalProperties":false},"SoapHandler":{"description":"Handler for SOAP","title":"SoapHandler","$ref":"api#/definitions/SoapHandler_1"},"SoapHandler_1":{"description":"Handler for SOAP","title":"SoapHandler_1","type":"object","properties":{"wsdl":{"description":"A url to your WSDL","type":"string","title":"wsdl"},"basicAuth":{"$ref":"api#/definitions/SoapSecurityBasicAuthConfig","title":"basicAuth"},"securityCert":{"$ref":"api#/definitions/SoapSecurityCertificateConfig","title":"securityCert"}},"additionalProperties":false,"required":["wsdl"]},"SoapSecurityBasicAuthConfig":{"description":"Basic Authentication Configuration\nIncluding username and password fields","title":"SoapSecurityBasicAuthConfig","$ref":"api#/definitions/SoapSecurityBasicAuthConfig_1"},"SoapSecurityBasicAuthConfig_1":{"description":"Basic Authentication Configuration\nIncluding username and password fields","title":"SoapSecurityBasicAuthConfig_1","type":"object","properties":{"username":{"description":"Username for Basic Authentication","type":"string","title":"username"},"password":{"description":"Password for Basic Authentication","type":"string","title":"password"}},"additionalProperties":false,"required":["password","username"]},"SoapSecurityCertificateConfig":{"description":"SSL Certificate Based Authentication Configuration\nIncluding public key, private key and password fields","title":"SoapSecurityCertificateConfig","$ref":"api#/definitions/SoapSecurityCertificateConfig_1"},"SoapSecurityCertificateConfig_1":{"description":"SSL Certificate Based Authentication Configuration\nIncluding public key, private key and password fields","title":"SoapSecurityCertificateConfig_1","type":"object","properties":{"publicKey":{"description":"Your public key","type":"string","title":"publicKey"},"privateKey":{"description":"Your private key","type":"string","title":"privateKey"},"password":{"description":"Password","type":"string","title":"password"},"publicKeyPath":{"description":"Path to the file or URL contains your public key","type":"string","title":"publicKeyPath"},"privateKeyPath":{"description":"Path to the file or URL contains your private key","type":"string","title":"privateKeyPath"},"passwordPath":{"description":"Path to the file or URL contains your password","type":"string","title":"passwordPath"}},"additionalProperties":false},"ThriftHandler":{"description":"Handler for OData","title":"ThriftHandler","$ref":"api#/definitions/ThriftHandler_1"},"ThriftHandler_1":{"description":"Handler for OData","title":"ThriftHandler_1","type":"object","properties":{"hostName":{"description":"The name of the host to connect to.","type":"string","title":"hostName"},"port":{"description":"The port number to attach to on the host.","type":"number","title":"port"},"path":{"description":"The path on which the Thrift service is listening. Defaults to '/thrift'.","type":"string","title":"path"},"https":{"description":"Boolean value indicating whether to use https. Defaults to false.","type":"boolean","title":"https"},"protocol":{"description":"Name of the Thrift protocol type to use. Defaults to 'binary'. (Allowed values: binary, compact, json)","enum":["binary","compact","json"],"type":"string","title":"protocol"},"serviceName":{"description":"The name of your service. Used for logging.","type":"string","title":"serviceName"},"operationHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls","type":"object","additionalProperties":{},"title":"operationHeaders"},"schemaHeaders":{"description":"If you are using a remote URL endpoint to fetch your schema, you can set headers for the HTTP request to fetch your schema.","type":"object","additionalProperties":{},"title":"schemaHeaders"},"idl":{"description":"Path to IDL file","type":"string","title":"idl"}},"additionalProperties":false,"required":["hostName","idl","port","serviceName"]},"TuqlHandler":{"description":"Handler for SQLite database, based on `tuql`","title":"TuqlHandler","$ref":"api#/definitions/TuqlHandler_1"},"TuqlHandler_1":{"description":"Handler for SQLite database, based on `tuql`","title":"TuqlHandler_1","type":"object","properties":{"db":{"description":"Pointer to your SQLite database","type":"string","title":"db"},"infile":{"description":"Path to the SQL Dump file if you want to build a in-memory database","type":"string","title":"infile"}},"additionalProperties":false},"Transform":{"title":"Transform","type":"object","additionalProperties":{},"properties":{"cache":{"description":"Transformer to apply caching for your data sources","type":"array","items":{"$ref":"api#/definitions/CacheTransformConfig"},"title":"cache"},"federation":{"$ref":"api#/definitions/FederationTransform","title":"federation"},"filterSchema":{"type":"array","items":{"type":"string"},"title":"filterSchema"},"mock":{"$ref":"api#/definitions/MockingConfig","title":"mock"},"namingConvention":{"$ref":"api#/definitions/NamingConventionTransformConfig","title":"namingConvention"},"prefix":{"$ref":"api#/definitions/PrefixTransformConfig","title":"prefix"},"rename":{"description":"Transformer to apply rename of a GraphQL type","type":"array","items":{"$ref":"api#/definitions/RenameTransformObject"},"title":"rename"},"resolversComposition":{"description":"Transformer to apply composition to resolvers","type":"array","items":{"$ref":"api#/definitions/ResolversCompositionTransformObject"},"title":"resolversComposition"},"snapshot":{"$ref":"api#/definitions/SnapshotTransformConfig","title":"snapshot"}}},"CacheTransformConfig":{"title":"CacheTransformConfig","type":"object","properties":{"field":{"description":"The type and field to apply cache to, you can use wild cards as well, for example: `Query.*`","type":"string","title":"field"},"cacheKey":{"description":"Cache key to use to store your resolvers responses.\nThe defualt is: {typeName}-{fieldName}-{argsHash}-{fieldNamesHash}\n\nAvailable variables:\n- {args.argName} - use resolver argument\n- {typeName} - use name of the type\n- {fieldName} - use name of the field\n- {argsHash} - a hash based on the 'args' object\n- {fieldNamesHash} - a hash based on the field names selected by the client\n- {info} - the GraphQLResolveInfo of the resolver\n\nAvailable interpolations:\n- {format|date} - returns the current date with a specific format","type":"string","title":"cacheKey"},"invalidate":{"$ref":"api#/definitions/CacheInvalidateConfig","title":"invalidate"}},"additionalProperties":false,"required":["field"]},"CacheInvalidateConfig":{"description":"Invalidation rules","title":"CacheInvalidateConfig","$ref":"api#/definitions/CacheInvalidateConfig_1"},"CacheInvalidateConfig_1":{"description":"Invalidation rules","title":"CacheInvalidateConfig_1","type":"object","properties":{"effectingOperations":{"description":"Invalidate the cache when a specific operation is done without an error","type":"array","items":{"$ref":"api#/definitions/CacheEffectingOperationConfig"},"title":"effectingOperations"},"ttl":{"description":"Specified in seconds, the time-to-live (TTL) value limits the lifespan","type":"number","title":"ttl"}},"additionalProperties":false},"CacheEffectingOperationConfig":{"title":"CacheEffectingOperationConfig","type":"object","properties":{"operation":{"description":"Path to the operation that could effect it. In a form: Mutation.something. Note that wildcard is not supported in this field.","type":"string","title":"operation"},"matchKey":{"description":"Cache key to invalidate on sucessful resolver (no error), see `cacheKey` for list of available options in this field.","type":"string","title":"matchKey"}},"additionalProperties":false,"required":["operation"]},"FederationTransform":{"title":"FederationTransform","$ref":"api#/definitions/FederationTransform_1"},"FederationTransform_1":{"title":"FederationTransform_1","type":"object","properties":{"types":{"type":"array","items":{"$ref":"api#/definitions/FederationTransformType"},"title":"types"}},"additionalProperties":false},"FederationTransformType":{"title":"FederationTransformType","type":"object","properties":{"name":{"type":"string","title":"name"},"config":{"$ref":"api#/definitions/FederationObjectConfig","title":"config"}},"additionalProperties":false,"required":["name"]},"FederationObjectConfig":{"title":"FederationObjectConfig","$ref":"api#/definitions/FederationObjectConfig_1"},"FederationObjectConfig_1":{"title":"FederationObjectConfig_1","type":"object","properties":{"keyFields":{"type":"array","items":{"type":"string"},"title":"keyFields"},"extend":{"type":"boolean","title":"extend"},"fields":{"type":"array","items":{"$ref":"api#/definitions/FederationField"},"title":"fields"},"resolveReference":{"description":"Any of: String, ResolveReferenceObject","anyOf":[{"$ref":"api#/definitions/ResolveReferenceObject"},{"type":"string"}],"title":"resolveReference"}},"additionalProperties":false},"FederationField":{"title":"FederationField","type":"object","properties":{"name":{"type":"string","title":"name"},"config":{"$ref":"api#/definitions/FederationFieldConfig","title":"config"}},"additionalProperties":false,"required":["config","name"]},"FederationFieldConfig":{"title":"FederationFieldConfig","type":"object","properties":{"external":{"type":"boolean","title":"external"},"provides":{"type":"string","title":"provides"},"required":{"type":"string","title":"required"}},"additionalProperties":false},"ResolveReferenceObject":{"title":"ResolveReferenceObject","type":"object","properties":{"targetSource":{"type":"string","title":"targetSource"},"targetMethod":{"type":"string","title":"targetMethod"},"args":{"type":"object","additionalProperties":{},"title":"args"},"returnData":{"type":"string","title":"returnData"},"resultSelectedFields":{"type":"object","additionalProperties":{},"title":"resultSelectedFields"},"resultSelectionSet":{"type":"string","title":"resultSelectionSet"},"resultDepth":{"type":"number","title":"resultDepth"}},"additionalProperties":false,"required":["args","targetMethod","targetSource"]},"MockingConfig":{"description":"Mock configuration for your source","title":"MockingConfig","$ref":"api#/definitions/MockingConfig_1"},"MockingConfig_1":{"description":"Mock configuration for your source","title":"MockingConfig_1","type":"object","properties":{"if":{"description":"If this expression is truthy, mocking would be enabled\nYou can use environment variables expression, for example: `${MOCKING_ENABLED}`","type":"boolean","title":"if"},"preserveResolvers":{"description":"Do not mock any other resolvers other than defined in `mocks`.\nFor example, you can enable this if you don't want to mock entire schema but partially.","type":"boolean","title":"preserveResolvers"},"mocks":{"description":"Mock configurations","type":"array","items":{"$ref":"api#/definitions/MockingFieldConfig"},"title":"mocks"}},"additionalProperties":false},"MockingFieldConfig":{"title":"MockingFieldConfig","type":"object","properties":{"apply":{"description":"Resolver path\nExample: User.firstName","type":"string","title":"apply"},"if":{"description":"If this expression is truthy, mocking would be enabled\nYou can use environment variables expression, for example: `${MOCKING_ENABLED}`","type":"boolean","title":"if"},"faker":{"description":"Faker.js expression or function\nRead more (https://github.com/marak/Faker.js/#fakerfake)\nExample;\nfaker: name.firstName\nfaker: \"{{ name.firstName }} {{ name.lastName }}\"","type":"string","title":"faker"},"custom":{"description":"Custom mocking\nIt can be a module or json file.\nBoth \"moduleName#exportName\" or only \"moduleName\" would work","type":"string","title":"custom"}},"additionalProperties":false,"required":["apply"]},"NamingConventionTransformConfig":{"description":"Transformer to apply naming convention to GraphQL Types","title":"NamingConventionTransformConfig","$ref":"api#/definitions/NamingConventionTransformConfig_1"},"NamingConventionTransformConfig_1":{"description":"Transformer to apply naming convention to GraphQL Types","title":"NamingConventionTransformConfig_1","type":"object","properties":{"typeNames":{"description":"Allowed values: camelCase, capitalCase, constantCase, dotCase, headerCase, noCase, paramCase, pascalCase, pathCase, sentenceCase, snakeCase, upperCase, lowerCase","enum":["camelCase","capitalCase","constantCase","dotCase","headerCase","lowerCase","noCase","paramCase","pascalCase","pathCase","sentenceCase","snakeCase","upperCase"],"type":"string","title":"typeNames"},"fieldNames":{"description":"Allowed values: camelCase, capitalCase, constantCase, dotCase, headerCase, noCase, paramCase, pascalCase, pathCase, sentenceCase, snakeCase, upperCase, lowerCase","enum":["camelCase","capitalCase","constantCase","dotCase","headerCase","lowerCase","noCase","paramCase","pascalCase","pathCase","sentenceCase","snakeCase","upperCase"],"type":"string","title":"fieldNames"},"enumValues":{"description":"Allowed values: camelCase, capitalCase, constantCase, dotCase, headerCase, noCase, paramCase, pascalCase, pathCase, sentenceCase, snakeCase, upperCase, lowerCase","enum":["camelCase","capitalCase","constantCase","dotCase","headerCase","lowerCase","noCase","paramCase","pascalCase","pathCase","sentenceCase","snakeCase","upperCase"],"type":"string","title":"enumValues"}},"additionalProperties":false},"PrefixTransformConfig":{"description":"Prefix transform","title":"PrefixTransformConfig","$ref":"api#/definitions/PrefixTransformConfig_1"},"PrefixTransformConfig_1":{"description":"Prefix transform","title":"PrefixTransformConfig_1","type":"object","properties":{"value":{"description":"The prefix to apply to the schema types. By default it's the API name.","type":"string","title":"value"},"ignore":{"description":"List of ignored types","type":"array","items":{"type":"string"},"title":"ignore"},"includeRootOperations":{"description":"Changes root types and changes the field names","type":"boolean","title":"includeRootOperations"}},"additionalProperties":false},"RenameTransformObject":{"title":"RenameTransformObject","type":"object","properties":{"from":{"description":"The GraphQL type to rename","type":"string","title":"from"},"to":{"description":"The new name","type":"string","title":"to"}},"additionalProperties":false,"required":["from","to"]},"ResolversCompositionTransformObject":{"title":"ResolversCompositionTransformObject","type":"object","properties":{"resolver":{"description":"The GraphQL Resolver path\nExample: Query.users","type":"string","title":"resolver"},"composer":{"description":"Path to the composer function\nExample: ./src/auth.js#authComposer","title":"composer"}},"additionalProperties":false,"required":["composer","resolver"]},"SnapshotTransformConfig":{"description":"Configuration for Snapshot extension","title":"SnapshotTransformConfig","$ref":"api#/definitions/SnapshotTransformConfig_1"},"SnapshotTransformConfig_1":{"description":"Configuration for Snapshot extension","title":"SnapshotTransformConfig_1","type":"object","properties":{"if":{"description":"Expression for when to activate this extension.\nValue can be a valid JS expression string or a boolean (Any of: String, Boolean)","type":["string","boolean"],"title":"if"},"apply":{"description":"Resolver to be applied\nFor example;\n   apply:\n       - Query.* <- * will apply this extension to all fields of Query type\n       - Mutation.someMutationButProbablyYouWontNeedIt","type":"array","items":{"type":"string"},"title":"apply"},"outputDir":{"description":"Path to the directory of the generated snapshot files","type":"string","title":"outputDir"}},"additionalProperties":false,"required":["apply","outputDir"]},"AdditionalStitchingResolverObject":{"title":"AdditionalStitchingResolverObject","type":"object","properties":{"type":{"type":"string","title":"type"},"field":{"type":"string","title":"field"},"requiredSelectionSet":{"type":"string","title":"requiredSelectionSet"},"targetSource":{"type":"string","title":"targetSource"},"targetMethod":{"type":"string","title":"targetMethod"},"args":{"type":"object","additionalProperties":{},"title":"args"},"returnData":{"type":"string","title":"returnData"},"resultSelectedFields":{"type":"object","additionalProperties":{},"title":"resultSelectedFields"},"resultSelectionSet":{"type":"string","title":"resultSelectionSet"},"resultDepth":{"type":"number","title":"resultDepth"}},"additionalProperties":false,"required":["field","targetMethod","targetSource","type"]},"AdditionalSubscriptionObject":{"title":"AdditionalSubscriptionObject","type":"object","properties":{"type":{"type":"string","title":"type"},"field":{"type":"string","title":"field"},"pubsubTopic":{"type":"string","title":"pubsubTopic"},"returnData":{"type":"string","title":"returnData"},"filterBy":{"type":"string","title":"filterBy"}},"additionalProperties":false,"required":["field","pubsubTopic","type"]},"Cache":{"description":"Backend cache","title":"Cache","$ref":"api#/definitions/Cache_1"},"Cache_1":{"description":"Backend cache","title":"Cache_1","type":"object","additionalProperties":{},"properties":{"file":{"$ref":"api#/definitions/FileCacheConfig","title":"file"},"inmemoryLRU":{"$ref":"api#/definitions/InMemoryLRUConfig","title":"inmemoryLRU"},"localforage":{"$ref":"api#/definitions/LocalforageConfig","title":"localforage"},"redis":{"$ref":"api#/definitions/RedisConfig","title":"redis"}}},"FileCacheConfig":{"title":"FileCacheConfig","$ref":"api#/definitions/FileCacheConfig_1"},"FileCacheConfig_1":{"title":"FileCacheConfig_1","type":"object","properties":{"path":{"type":"string","title":"path"}},"additionalProperties":false},"InMemoryLRUConfig":{"title":"InMemoryLRUConfig","$ref":"api#/definitions/InMemoryLRUConfig_1"},"InMemoryLRUConfig_1":{"title":"InMemoryLRUConfig_1","type":"object","properties":{"max":{"type":"number","title":"max"}},"additionalProperties":false},"LocalforageConfig":{"title":"LocalforageConfig","$ref":"api#/definitions/LocalforageConfig_1"},"LocalforageConfig_1":{"title":"LocalforageConfig_1","type":"object","properties":{"driver":{"description":"Allowed values: WEBSQL, INDEXEDDB, LOCALSTORAGE","type":"array","items":{"enum":["INDEXEDDB","LOCALSTORAGE","WEBSQL"],"type":"string"},"title":"driver"},"name":{"type":"string","title":"name"},"version":{"type":"number","title":"version"},"size":{"type":"number","title":"size"},"storeName":{"type":"string","title":"storeName"},"description":{"type":"string","title":"description"}},"additionalProperties":false},"RedisConfig":{"title":"RedisConfig","$ref":"api#/definitions/RedisConfig_1"},"RedisConfig_1":{"title":"RedisConfig_1","type":"object","properties":{"host":{"type":"string","title":"host"},"port":{"type":"number","title":"port"},"password":{"type":"string","title":"password"}},"additionalProperties":false},"PubSubConfig":{"title":"PubSubConfig","type":"object","properties":{"name":{"type":"string","title":"name"},"config":{"title":"config"}},"additionalProperties":false,"required":["name"]}},"$schema":"http://json-schema.org/draft-07/schema#","$id":"api"}
