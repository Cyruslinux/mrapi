{"$ref":"#/definitions/api.Options","definitions":{"api.Options":{"type":"object","properties":{"server":{"$ref":"#/definitions/mrapi.api.ServerOptions"},"openapi":{"$ref":"#/definitions/mrapi.api.OpenapiOptions"},"graphql":{"$ref":"#/definitions/mrapi.api.GraphqlOptions"},"autoGenerate":{"type":"boolean"},"tenantIdentity":{"type":"string"},"schemaIdentity":{"type":"string"},"schemaNames":{"type":"array","items":{"type":"string"}},"outputSchema":{"type":["string","boolean"]},"logger":{},"service":{"$ref":"#/definitions/api.MeshConfig"},"meshConfigOuputPath":{"type":"string"}},"additionalProperties":false},"mrapi.api.ServerOptions":{"$ref":"#/definitions/api.ServerOptions"},"api.ServerOptions":{"type":"object","properties":{"type":{"$ref":"#/definitions/mrapi.api.ServerType"},"host":{"type":"string"},"port":{"type":"number"},"endpoint":{"typeof":"function"},"options":{"typeof":"function"},"plugins":{"typeof":"function"}},"additionalProperties":false},"mrapi.api.ServerType":{"enum":["combined","standalone"],"type":"string"},"mrapi.api.OpenapiOptions":{"$ref":"#/definitions/api.OpenapiOptions"},"api.OpenapiOptions":{"type":"object","properties":{"dir":{"type":"string"},"prefix":{"type":"string"},"dalBaseUrl":{"type":"string"}},"additionalProperties":false},"mrapi.api.GraphqlOptions":{"$ref":"#/definitions/api.GraphqlOptions"},"api.GraphqlOptions":{"type":"object","additionalProperties":{},"properties":{"dir":{"type":"string"}}},"api.MeshConfig":{"$ref":"#/definitions/api.MeshConfig_1"},"api.MeshConfig_1":{"type":"object","properties":{"serve":{"$ref":"#/definitions/ServeConfig"},"require":{"type":"array","items":{"type":"string"}},"sources":{"description":"Defines the list of your external data sources for your API mesh","type":"array","items":{"$ref":"#/definitions/Source"}},"transforms":{"description":"Transform to apply to the unified mesh schema","type":"array","items":{"$ref":"#/definitions/Transform"}},"additionalTypeDefs":{"description":"Additional type definitions, or type definitions overrides you wish to add to the schema mesh","type":"string"},"additionalResolvers":{"description":"Additional resolvers, or resolvers overrides you wish to add to the schema mesh (Any of: String, AdditionalStitchingResolverObject, AdditionalSubscriptionObject)","type":"array","items":{"anyOf":[{"$ref":"#/definitions/AdditionalStitchingResolverObject"},{"$ref":"#/definitions/AdditionalSubscriptionObject"},{"type":"string"}]}},"cache":{"$ref":"#/definitions/Cache"},"merger":{"description":"Merge method","type":"string"},"pubsub":{"description":"PubSub Implementation (Any of: String, PubSubConfig)","anyOf":[{"$ref":"#/definitions/PubSubConfig"},{"type":"string"}]}},"additionalProperties":false,"required":["sources"]},"ServeConfig":{"$ref":"#/definitions/ServeConfig_1"},"ServeConfig_1":{"type":"object","properties":{"fork":{"description":"Spawn multiple server instances as node clusters (default: `1`) (Any of: Int, Boolean)","type":["number","boolean"]},"port":{"description":"TCP Port to listen (default: `3000`) (Any of: Int, String)","type":["string","number"]},"exampleQuery":{"description":"Provide an example query or queries for GraphQL Playground","type":"string"},"cors":{"$ref":"#/definitions/CorsConfig"},"handlers":{"description":"Any of: WebhookHandler, ExpressHandler","type":"array","items":{"anyOf":[{"$ref":"#/definitions/WebhookHandler"},{"$ref":"#/definitions/ExpressHandler"}]}},"staticFiles":{"type":"string"}},"additionalProperties":false},"CorsConfig":{"$ref":"#/definitions/CorsConfig_1"},"CorsConfig_1":{"type":"object","properties":{"origin":{"type":"array","items":{"type":"string"}},"allowedHeaders":{"type":"array","items":{"type":"string"}},"exposedHeaders":{"type":"array","items":{"type":"string"}},"credentials":{"type":"boolean"},"maxAge":{"type":"number"},"preflightContinue":{"type":"boolean"},"optionsSuccessStatus":{"type":"number"}},"additionalProperties":false},"WebhookHandler":{"type":"object","properties":{"path":{"type":"string"},"pubsubTopic":{"type":"string"},"payload":{"type":"string"}},"additionalProperties":false,"required":["path","pubsubTopic"]},"ExpressHandler":{"type":"object","properties":{"path":{"type":"string"},"handler":{"type":"string"},"method":{"description":"Allowed values: GET, POST, DELETE, PATCH","enum":["DELETE","GET","PATCH","POST"],"type":"string"}},"additionalProperties":false,"required":["handler","path"]},"Source":{"type":"object","properties":{"name":{"description":"The name you wish to set to your remote API, this will be used for building the GraphQL context","type":"string"},"handler":{"$ref":"#/definitions/Handler"},"transforms":{"description":"List of transforms to apply to the current API source, before unifying it with the rest of the sources","type":"array","items":{"$ref":"#/definitions/Transform"}}},"additionalProperties":false,"required":["handler","name"]},"Handler":{"description":"Point to the handler you wish to use, it can either be a predefined handler, or a custom","type":"object","additionalProperties":{},"properties":{"graphql":{"$ref":"#/definitions/GraphQLHandler"},"grpc":{"$ref":"#/definitions/GrpcHandler"},"jsonSchema":{"$ref":"#/definitions/JsonSchemaHandler"},"mongoose":{"$ref":"#/definitions/MongooseHandler"},"mysql":{"$ref":"#/definitions/MySQLHandler"},"neo4j":{"$ref":"#/definitions/Neo4JHandler"},"odata":{"$ref":"#/definitions/ODataHandler"},"openapi":{"$ref":"#/definitions/OpenapiHandler"},"postgraphile":{"$ref":"#/definitions/PostGraphileHandler"},"soap":{"$ref":"#/definitions/SoapHandler"},"thrift":{"$ref":"#/definitions/ThriftHandler"},"tuql":{"$ref":"#/definitions/TuqlHandler"}}},"GraphQLHandler":{"description":"Handler for remote/local/third-party GraphQL schema","$ref":"#/definitions/GraphQLHandler_1"},"GraphQLHandler_1":{"description":"Handler for remote/local/third-party GraphQL schema","type":"object","properties":{"endpoint":{"description":"A url to your remote GraphQL endpoint","type":"string"},"schemaHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls only for schema introspection","typeof":"function"},"operationHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls only for operation during runtime","typeof":"function"},"useGETForQueries":{"description":"Use HTTP GET for Query operations","type":"boolean"},"method":{"description":"HTTP method used for GraphQL operations (Allowed values: GET, POST)","enum":["GET","POST"],"type":"string"},"enableSubscriptions":{"description":"Enable GraphQL Subscriptions using WebSocket","type":"boolean"},"customFetch":{"description":"Path to a custom W3 Compatible Fetch Implementation"},"webSocketImpl":{"description":"Path to a custom W3 Compatible WebSocket Implementation","type":"string"},"introspection":{"description":"Path to the introspection\nYou can seperately give schema introspection","type":"string"},"cacheIntrospection":{"description":"Cache Introspection (Any of: GraphQLIntrospectionCachingOptions, Boolean)","anyOf":[{"$ref":"#/definitions/GraphQLIntrospectionCachingOptions"},{"type":"boolean"}]}},"additionalProperties":false,"required":["endpoint"]},"GraphQLIntrospectionCachingOptions":{"type":"object","properties":{"ttl":{"description":"Time to live of introspection cache","type":"number"},"path":{"description":"Path to Introspection JSON File","type":"string"}},"additionalProperties":false},"GrpcHandler":{"description":"Handler for gRPC and Protobuf schemas","$ref":"#/definitions/GrpcHandler_1"},"GrpcHandler_1":{"description":"Handler for gRPC and Protobuf schemas","type":"object","properties":{"endpoint":{"description":"gRPC Endpoint","type":"string"},"protoFilePath":{"description":"gRPC Proto file that contains your protobuf schema (Any of: ProtoFilePath, String)","anyOf":[{"$ref":"#/definitions/ProtoFilePath"},{"type":"string"}]},"serviceName":{"description":"Your base service name\nUsed for naming only","type":"string"},"packageName":{"description":"Your base package name\nUsed for naming only","type":"string"},"requestTimeout":{"description":"Request timeout in milliseconds\nDefault: 200000","type":"number"},"credentialsSsl":{"$ref":"#/definitions/GrpcCredentialsSsl"},"useHTTPS":{"description":"Use https instead of http for gRPC connection","type":"boolean"},"metaData":{"description":"MetaData","typeof":"function"}},"additionalProperties":false,"required":["endpoint","protoFilePath"]},"ProtoFilePath":{"type":"object","properties":{"file":{"type":"string"},"load":{"$ref":"#/definitions/LoadOptions"}},"additionalProperties":false,"required":["file"]},"LoadOptions":{"$ref":"#/definitions/LoadOptions_1"},"LoadOptions_1":{"type":"object","properties":{"includeDirs":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},"GrpcCredentialsSsl":{"description":"SSL Credentials","$ref":"#/definitions/GrpcCredentialsSsl_1"},"GrpcCredentialsSsl_1":{"description":"SSL Credentials","type":"object","properties":{"rootCA":{"type":"string"},"certChain":{"type":"string"},"privateKey":{"type":"string"}},"additionalProperties":false},"JsonSchemaHandler":{"description":"Handler for JSON Schema specification. Source could be a local json file, or a url to it.","$ref":"#/definitions/JsonSchemaHandler_1"},"JsonSchemaHandler_1":{"description":"Handler for JSON Schema specification. Source could be a local json file, or a url to it.","type":"object","properties":{"baseUrl":{"type":"string"},"operationHeaders":{"typeof":"function"},"schemaHeaders":{"typeof":"function"},"operations":{"type":"array","items":{"$ref":"#/definitions/JsonSchemaOperation"}},"disableTimestampScalar":{"type":"boolean"}},"additionalProperties":false,"required":["baseUrl","operations"]},"JsonSchemaOperation":{"type":"object","properties":{"field":{"type":"string"},"path":{"type":"string"},"pubsubTopic":{"type":"string"},"description":{"type":"string"},"type":{"description":"Allowed values: Query, Mutation, Subscription","enum":["Mutation","Query","Subscription"],"type":"string"},"method":{"description":"Allowed values: GET, DELETE, POST, PUT, PATCH","enum":["DELETE","GET","PATCH","POST","PUT"],"type":"string"},"requestSchema":{},"requestSample":{},"requestTypeName":{"type":"string"},"responseSample":{},"responseSchema":{},"responseTypeName":{"type":"string"},"argTypeMap":{"typeof":"function"},"headers":{"typeof":"function"}},"additionalProperties":false,"required":["field","method","type"]},"MongooseHandler":{"$ref":"#/definitions/MongooseHandler_1"},"MongooseHandler_1":{"type":"object","properties":{"connectionString":{"type":"string"},"models":{"type":"array","items":{"$ref":"#/definitions/MongooseModel"}},"discriminators":{"type":"array","items":{"$ref":"#/definitions/MongooseModel"}}},"additionalProperties":false},"MongooseModel":{"type":"object","properties":{"name":{"type":"string"},"path":{"type":"string"},"options":{"$ref":"#/definitions/ComposeWithMongooseOpts"}},"additionalProperties":false,"required":["name","path"]},"ComposeWithMongooseOpts":{"$ref":"#/definitions/ComposeWithMongooseOpts_1"},"ComposeWithMongooseOpts_1":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"fields":{"$ref":"#/definitions/ComposeWithMongooseFieldsOpts"},"inputType":{"$ref":"#/definitions/ComposeMongooseInputType"},"resolvers":{"$ref":"#/definitions/TypeConverterResolversOpts1"}},"additionalProperties":false},"ComposeWithMongooseFieldsOpts":{"$ref":"#/definitions/ComposeWithMongooseFieldsOpts_1"},"ComposeWithMongooseFieldsOpts_1":{"type":"object","properties":{"only":{"type":"array","items":{"type":"string"}},"remove":{"type":"array","items":{"type":"string"}},"required":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},"ComposeMongooseInputType":{"$ref":"#/definitions/ComposeMongooseInputType_1"},"ComposeMongooseInputType_1":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"fields":{"$ref":"#/definitions/ComposeWithMongooseFieldsOpts1"},"resolvers":{"$ref":"#/definitions/TypeConverterResolversOpts"}},"additionalProperties":false},"ComposeWithMongooseFieldsOpts1":{"$ref":"#/definitions/ComposeWithMongooseFieldsOpts1_1"},"ComposeWithMongooseFieldsOpts1_1":{"type":"object","properties":{"only":{"type":"array","items":{"type":"string"}},"remove":{"type":"array","items":{"type":"string"}},"required":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},"TypeConverterResolversOpts":{"$ref":"#/definitions/TypeConverterResolversOpts_1"},"TypeConverterResolversOpts_1":{"type":"object","properties":{"findById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"findByIds":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"findOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"findMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"updateById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"updateOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"updateMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"removeById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"removeOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"removeMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"createOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"createMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"count":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"connection":{"description":"Any of: Boolean, JSON","anyOf":[{"typeof":"function"},{"type":"boolean"}]},"pagination":{"description":"Any of: Boolean, PaginationResolverOpts","anyOf":[{"$ref":"#/definitions/PaginationResolverOpts"},{"type":"boolean"}]}},"additionalProperties":false},"ComposeWithMongooseResolverOpts":{"type":"object","properties":{"filter":{"$ref":"#/definitions/FilterHelperArgsOpts"},"sort":{"$ref":"#/definitions/SortHelperArgsOpts"},"limit":{"$ref":"#/definitions/LimitHelperArgsOpts"},"record":{"$ref":"#/definitions/RecordHelperArgsOpts"},"skip":{"type":"boolean"}},"additionalProperties":false},"FilterHelperArgsOpts":{"$ref":"#/definitions/FilterHelperArgsOpts_1"},"FilterHelperArgsOpts_1":{"type":"object","properties":{"filterTypeName":{"type":"string"},"isRequired":{"type":"boolean"},"onlyIndexed":{"type":"boolean"},"requiredFields":{"type":"array","items":{"type":"string"}},"operators":{"description":"Any of: Boolean, JSON","anyOf":[{"typeof":"function"},{"type":"boolean"}]},"removeFields":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},"SortHelperArgsOpts":{"$ref":"#/definitions/SortHelperArgsOpts_1"},"SortHelperArgsOpts_1":{"type":"object","properties":{"sortTypeName":{"type":"string"}},"additionalProperties":false},"LimitHelperArgsOpts":{"$ref":"#/definitions/LimitHelperArgsOpts_1"},"LimitHelperArgsOpts_1":{"type":"object","properties":{"defaultValue":{"type":"number"}},"additionalProperties":false},"RecordHelperArgsOpts":{"$ref":"#/definitions/RecordHelperArgsOpts_1"},"RecordHelperArgsOpts_1":{"type":"object","properties":{"recordTypeName":{"type":"string"},"isRequired":{"type":"boolean"},"removeFields":{"type":"array","items":{"type":"string"}},"requiredFields":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},"PaginationResolverOpts":{"type":"object","properties":{"perPage":{"type":"number"}},"additionalProperties":false},"TypeConverterResolversOpts1":{"$ref":"#/definitions/TypeConverterResolversOpts1_1"},"TypeConverterResolversOpts1_1":{"type":"object","properties":{"findById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"findByIds":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"findOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"findMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"updateById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"updateOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"updateMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"removeById":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"removeOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"removeMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"createOne":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"createMany":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"count":{"description":"Any of: Boolean, ComposeWithMongooseResolverOpts","anyOf":[{"$ref":"#/definitions/ComposeWithMongooseResolverOpts"},{"type":"boolean"}]},"connection":{"description":"Any of: Boolean, JSON","anyOf":[{"typeof":"function"},{"type":"boolean"}]},"pagination":{"description":"Any of: Boolean, PaginationResolverOpts","anyOf":[{"$ref":"#/definitions/PaginationResolverOpts"},{"type":"boolean"}]}},"additionalProperties":false},"MySQLHandler":{"$ref":"#/definitions/MySQLHandler_1"},"MySQLHandler_1":{"type":"object","properties":{"host":{"type":"string"},"port":{"type":"number"},"user":{"type":"string"},"password":{"type":"string"},"database":{"type":"string"}},"additionalProperties":false,"required":["database","host","port","user"]},"Neo4JHandler":{"description":"Handler for Neo4j","$ref":"#/definitions/Neo4JHandler_1"},"Neo4JHandler_1":{"description":"Handler for Neo4j","type":"object","properties":{"url":{"description":"URL for the Neo4j Instance e.g. neo4j://localhost","type":"string"},"username":{"description":"Username for basic authentication","type":"string"},"password":{"description":"Password for basic authentication","type":"string"},"alwaysIncludeRelationships":{"description":"Specifies whether relationships should always be included in the type definitions as [relationship](https://grandstack.io/docs/neo4j-graphql-js.html#relationship-types) types, even if the relationships do not have properties.","type":"boolean"},"database":{"description":"Specifies database name","type":"string"},"typeDefs":{"description":"Provide GraphQL Type Definitions instead of inferring","type":"string"},"cacheIntrospection":{"description":"Cache Introspection (Any of: Neo4jIntrospectionCachingOptions, Boolean)","anyOf":[{"$ref":"#/definitions/Neo4JIntrospectionCachingOptions"},{"type":"boolean"}]}},"additionalProperties":false,"required":["password","url","username"]},"Neo4JIntrospectionCachingOptions":{"type":"object","properties":{"ttl":{"description":"Time to live of introspection cache","type":"number"}},"additionalProperties":false},"ODataHandler":{"description":"Handler for OData","$ref":"#/definitions/ODataHandler_1"},"ODataHandler_1":{"description":"Handler for OData","type":"object","properties":{"baseUrl":{"description":"Base URL for OData API","type":"string"},"metadata":{"description":"Custom $metadata File or URL","type":"string"},"operationHeaders":{"description":"Headers to be used with the operation requests","typeof":"function"},"schemaHeaders":{"description":"Headers to be used with the $metadata requests","typeof":"function"},"batch":{"description":"Enable batching (Allowed values: multipart, json)","enum":["json","multipart"],"type":"string"},"expandNavProps":{"description":"Use $expand for navigation props instead of seperate HTTP requests (Default: false)","type":"boolean"}},"additionalProperties":false,"required":["baseUrl"]},"OpenapiHandler":{"description":"Handler for Swagger / OpenAPI 2/3 specification. Source could be a local json/swagger file, or a url to it.","$ref":"#/definitions/OpenapiHandler_1"},"OpenapiHandler_1":{"description":"Handler for Swagger / OpenAPI 2/3 specification. Source could be a local json/swagger file, or a url to it.","type":"object","properties":{"source":{"description":"A pointer to your API source - could be a local file, remote file or url endpoint","type":"string"},"sourceFormat":{"description":"Format of the source file (Allowed values: json, yaml)","enum":["json","yaml"],"type":"string"},"operationHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls","typeof":"function"},"schemaHeaders":{"description":"If you are using a remote URL endpoint to fetch your schema, you can set headers for the HTTP request to fetch your schema.","typeof":"function"},"baseUrl":{"description":"Specifies the URL on which all paths will be based on.\nOverrides the server object in the OAS.","type":"string"},"qs":{"description":"JSON object representing the query search parameters to add to the API calls","typeof":"function"},"customFetch":{"description":"W3 Compatible Fetch Implementation"},"includeHttpDetails":{"description":"Include HTTP Response details to the result object","type":"boolean"}},"additionalProperties":false,"required":["source"]},"PostGraphileHandler":{"description":"Handler for Postgres database, based on `postgraphile`","$ref":"#/definitions/PostGraphileHandler_1"},"PostGraphileHandler_1":{"description":"Handler for Postgres database, based on `postgraphile`","type":"object","properties":{"connectionString":{"description":"A connection string to your Postgres database","type":"string"},"schemaName":{"description":"An array of strings which specifies the PostgreSQL schemas that PostGraphile will use to create a GraphQL schema. The default schema is the public schema.","type":"array","items":{"type":"string"}},"pool":{"description":"Connection Pool settings","typeof":"function"},"appendPlugins":{"description":"Extra Postgraphile Plugins to append","type":"array","items":{"type":"string"}},"skipPlugins":{"description":"Postgraphile Plugins to skip (e.g. \"graphile-build#NodePlugin\")","type":"array","items":{"type":"string"}},"options":{"description":"Extra Postgraphile options that will be added to the postgraphile constructor. It can either be an object or a string pointing to the object's path (e.g. \"./my-config#options\"). See the [postgraphile docs](https://www.graphile.org/postgraphile/usage-library/) for more information. (Any of: JSON, String)","anyOf":[{"typeof":"function"},{"type":"string"}]},"cacheIntrospection":{"description":"Cache Introspection (Any of: GraphQLIntrospectionCachingOptions, Boolean)","anyOf":[{"$ref":"#/definitions/GraphQLIntrospectionCachingOptions"},{"type":"boolean"}]}},"additionalProperties":false},"SoapHandler":{"description":"Handler for SOAP","$ref":"#/definitions/SoapHandler_1"},"SoapHandler_1":{"description":"Handler for SOAP","type":"object","properties":{"wsdl":{"description":"A url to your WSDL","type":"string"},"basicAuth":{"$ref":"#/definitions/SoapSecurityBasicAuthConfig"},"securityCert":{"$ref":"#/definitions/SoapSecurityCertificateConfig"}},"additionalProperties":false,"required":["wsdl"]},"SoapSecurityBasicAuthConfig":{"description":"Basic Authentication Configuration\nIncluding username and password fields","$ref":"#/definitions/SoapSecurityBasicAuthConfig_1"},"SoapSecurityBasicAuthConfig_1":{"description":"Basic Authentication Configuration\nIncluding username and password fields","type":"object","properties":{"username":{"description":"Username for Basic Authentication","type":"string"},"password":{"description":"Password for Basic Authentication","type":"string"}},"additionalProperties":false,"required":["password","username"]},"SoapSecurityCertificateConfig":{"description":"SSL Certificate Based Authentication Configuration\nIncluding public key, private key and password fields","$ref":"#/definitions/SoapSecurityCertificateConfig_1"},"SoapSecurityCertificateConfig_1":{"description":"SSL Certificate Based Authentication Configuration\nIncluding public key, private key and password fields","type":"object","properties":{"publicKey":{"description":"Your public key","type":"string"},"privateKey":{"description":"Your private key","type":"string"},"password":{"description":"Password","type":"string"},"publicKeyPath":{"description":"Path to the file or URL contains your public key","type":"string"},"privateKeyPath":{"description":"Path to the file or URL contains your private key","type":"string"},"passwordPath":{"description":"Path to the file or URL contains your password","type":"string"}},"additionalProperties":false},"ThriftHandler":{"description":"Handler for OData","$ref":"#/definitions/ThriftHandler_1"},"ThriftHandler_1":{"description":"Handler for OData","type":"object","properties":{"hostName":{"description":"The name of the host to connect to.","type":"string"},"port":{"description":"The port number to attach to on the host.","type":"number"},"path":{"description":"The path on which the Thrift service is listening. Defaults to '/thrift'.","type":"string"},"https":{"description":"Boolean value indicating whether to use https. Defaults to false.","type":"boolean"},"protocol":{"description":"Name of the Thrift protocol type to use. Defaults to 'binary'. (Allowed values: binary, compact, json)","enum":["binary","compact","json"],"type":"string"},"serviceName":{"description":"The name of your service. Used for logging.","type":"string"},"operationHeaders":{"description":"JSON object representing the Headers to add to the runtime of the API calls","typeof":"function"},"schemaHeaders":{"description":"If you are using a remote URL endpoint to fetch your schema, you can set headers for the HTTP request to fetch your schema.","typeof":"function"},"idl":{"description":"Path to IDL file","type":"string"}},"additionalProperties":false,"required":["hostName","idl","port","serviceName"]},"TuqlHandler":{"description":"Handler for SQLite database, based on `tuql`","$ref":"#/definitions/TuqlHandler_1"},"TuqlHandler_1":{"description":"Handler for SQLite database, based on `tuql`","type":"object","properties":{"db":{"description":"Pointer to your SQLite database","type":"string"},"infile":{"description":"Path to the SQL Dump file if you want to build a in-memory database","type":"string"}},"additionalProperties":false},"Transform":{"type":"object","additionalProperties":{},"properties":{"cache":{"description":"Transformer to apply caching for your data sources","type":"array","items":{"$ref":"#/definitions/CacheTransformConfig"}},"federation":{"$ref":"#/definitions/FederationTransform"},"filterSchema":{"type":"array","items":{"type":"string"}},"mock":{"$ref":"#/definitions/MockingConfig"},"namingConvention":{"$ref":"#/definitions/NamingConventionTransformConfig"},"prefix":{"$ref":"#/definitions/PrefixTransformConfig"},"rename":{"description":"Transformer to apply rename of a GraphQL type","type":"array","items":{"$ref":"#/definitions/RenameTransformObject"}},"resolversComposition":{"description":"Transformer to apply composition to resolvers","type":"array","items":{"$ref":"#/definitions/ResolversCompositionTransformObject"}},"snapshot":{"$ref":"#/definitions/SnapshotTransformConfig"}}},"CacheTransformConfig":{"type":"object","properties":{"field":{"description":"The type and field to apply cache to, you can use wild cards as well, for example: `Query.*`","type":"string"},"cacheKey":{"description":"Cache key to use to store your resolvers responses.\nThe defualt is: {typeName}-{fieldName}-{argsHash}-{fieldNamesHash}\n\nAvailable variables:\n- {args.argName} - use resolver argument\n- {typeName} - use name of the type\n- {fieldName} - use name of the field\n- {argsHash} - a hash based on the 'args' object\n- {fieldNamesHash} - a hash based on the field names selected by the client\n- {info} - the GraphQLResolveInfo of the resolver\n\nAvailable interpolations:\n- {format|date} - returns the current date with a specific format","type":"string"},"invalidate":{"$ref":"#/definitions/CacheInvalidateConfig"}},"additionalProperties":false,"required":["field"]},"CacheInvalidateConfig":{"description":"Invalidation rules","$ref":"#/definitions/CacheInvalidateConfig_1"},"CacheInvalidateConfig_1":{"description":"Invalidation rules","type":"object","properties":{"effectingOperations":{"description":"Invalidate the cache when a specific operation is done without an error","type":"array","items":{"$ref":"#/definitions/CacheEffectingOperationConfig"}},"ttl":{"description":"Specified in seconds, the time-to-live (TTL) value limits the lifespan","type":"number"}},"additionalProperties":false},"CacheEffectingOperationConfig":{"type":"object","properties":{"operation":{"description":"Path to the operation that could effect it. In a form: Mutation.something. Note that wildcard is not supported in this field.","type":"string"},"matchKey":{"description":"Cache key to invalidate on sucessful resolver (no error), see `cacheKey` for list of available options in this field.","type":"string"}},"additionalProperties":false,"required":["operation"]},"FederationTransform":{"$ref":"#/definitions/FederationTransform_1"},"FederationTransform_1":{"type":"object","properties":{"types":{"type":"array","items":{"$ref":"#/definitions/FederationTransformType"}}},"additionalProperties":false},"FederationTransformType":{"type":"object","properties":{"name":{"type":"string"},"config":{"$ref":"#/definitions/FederationObjectConfig"}},"additionalProperties":false,"required":["name"]},"FederationObjectConfig":{"$ref":"#/definitions/FederationObjectConfig_1"},"FederationObjectConfig_1":{"type":"object","properties":{"keyFields":{"type":"array","items":{"type":"string"}},"extend":{"type":"boolean"},"fields":{"type":"array","items":{"$ref":"#/definitions/FederationField"}},"resolveReference":{"description":"Any of: String, ResolveReferenceObject","anyOf":[{"$ref":"#/definitions/ResolveReferenceObject"},{"type":"string"}]}},"additionalProperties":false},"FederationField":{"type":"object","properties":{"name":{"type":"string"},"config":{"$ref":"#/definitions/FederationFieldConfig"}},"additionalProperties":false,"required":["config","name"]},"FederationFieldConfig":{"type":"object","properties":{"external":{"type":"boolean"},"provides":{"type":"string"},"required":{"type":"string"}},"additionalProperties":false},"ResolveReferenceObject":{"type":"object","properties":{"targetSource":{"type":"string"},"targetMethod":{"type":"string"},"args":{"typeof":"function"},"returnData":{"type":"string"},"resultSelectedFields":{"typeof":"function"},"resultSelectionSet":{"type":"string"},"resultDepth":{"type":"number"}},"additionalProperties":false,"required":["args","targetMethod","targetSource"]},"MockingConfig":{"description":"Mock configuration for your source","$ref":"#/definitions/MockingConfig_1"},"MockingConfig_1":{"description":"Mock configuration for your source","type":"object","properties":{"if":{"description":"If this expression is truthy, mocking would be enabled\nYou can use environment variables expression, for example: `${MOCKING_ENABLED}`","type":"boolean"},"preserveResolvers":{"description":"Do not mock any other resolvers other than defined in `mocks`.\nFor example, you can enable this if you don't want to mock entire schema but partially.","type":"boolean"},"mocks":{"description":"Mock configurations","type":"array","items":{"$ref":"#/definitions/MockingFieldConfig"}}},"additionalProperties":false},"MockingFieldConfig":{"type":"object","properties":{"apply":{"description":"Resolver path\nExample: User.firstName","type":"string"},"if":{"description":"If this expression is truthy, mocking would be enabled\nYou can use environment variables expression, for example: `${MOCKING_ENABLED}`","type":"boolean"},"faker":{"description":"Faker.js expression or function\nRead more (https://github.com/marak/Faker.js/#fakerfake)\nExample;\nfaker: name.firstName\nfaker: \"{{ name.firstName }} {{ name.lastName }}\"","type":"string"},"custom":{"description":"Custom mocking\nIt can be a module or json file.\nBoth \"moduleName#exportName\" or only \"moduleName\" would work","type":"string"}},"additionalProperties":false,"required":["apply"]},"NamingConventionTransformConfig":{"description":"Transformer to apply naming convention to GraphQL Types","$ref":"#/definitions/NamingConventionTransformConfig_1"},"NamingConventionTransformConfig_1":{"description":"Transformer to apply naming convention to GraphQL Types","type":"object","properties":{"typeNames":{"description":"Allowed values: camelCase, capitalCase, constantCase, dotCase, headerCase, noCase, paramCase, pascalCase, pathCase, sentenceCase, snakeCase, upperCase, lowerCase","enum":["camelCase","capitalCase","constantCase","dotCase","headerCase","lowerCase","noCase","paramCase","pascalCase","pathCase","sentenceCase","snakeCase","upperCase"],"type":"string"},"fieldNames":{"description":"Allowed values: camelCase, capitalCase, constantCase, dotCase, headerCase, noCase, paramCase, pascalCase, pathCase, sentenceCase, snakeCase, upperCase, lowerCase","enum":["camelCase","capitalCase","constantCase","dotCase","headerCase","lowerCase","noCase","paramCase","pascalCase","pathCase","sentenceCase","snakeCase","upperCase"],"type":"string"},"enumValues":{"description":"Allowed values: camelCase, capitalCase, constantCase, dotCase, headerCase, noCase, paramCase, pascalCase, pathCase, sentenceCase, snakeCase, upperCase, lowerCase","enum":["camelCase","capitalCase","constantCase","dotCase","headerCase","lowerCase","noCase","paramCase","pascalCase","pathCase","sentenceCase","snakeCase","upperCase"],"type":"string"}},"additionalProperties":false},"PrefixTransformConfig":{"description":"Prefix transform","$ref":"#/definitions/PrefixTransformConfig_1"},"PrefixTransformConfig_1":{"description":"Prefix transform","type":"object","properties":{"value":{"description":"The prefix to apply to the schema types. By default it's the API name.","type":"string"},"ignore":{"description":"List of ignored types","type":"array","items":{"type":"string"}},"includeRootOperations":{"description":"Changes root types and changes the field names","type":"boolean"}},"additionalProperties":false},"RenameTransformObject":{"type":"object","properties":{"from":{"description":"The GraphQL type to rename","type":"string"},"to":{"description":"The new name","type":"string"}},"additionalProperties":false,"required":["from","to"]},"ResolversCompositionTransformObject":{"type":"object","properties":{"resolver":{"description":"The GraphQL Resolver path\nExample: Query.users","type":"string"},"composer":{"description":"Path to the composer function\nExample: ./src/auth.js#authComposer"}},"additionalProperties":false,"required":["composer","resolver"]},"SnapshotTransformConfig":{"description":"Configuration for Snapshot extension","$ref":"#/definitions/SnapshotTransformConfig_1"},"SnapshotTransformConfig_1":{"description":"Configuration for Snapshot extension","type":"object","properties":{"if":{"description":"Expression for when to activate this extension.\nValue can be a valid JS expression string or a boolean (Any of: String, Boolean)","type":["string","boolean"]},"apply":{"description":"Resolver to be applied\nFor example;\n   apply:\n       - Query.* <- * will apply this extension to all fields of Query type\n       - Mutation.someMutationButProbablyYouWontNeedIt","type":"array","items":{"type":"string"}},"outputDir":{"description":"Path to the directory of the generated snapshot files","type":"string"}},"additionalProperties":false,"required":["apply","outputDir"]},"AdditionalStitchingResolverObject":{"type":"object","properties":{"type":{"type":"string"},"field":{"type":"string"},"requiredSelectionSet":{"type":"string"},"targetSource":{"type":"string"},"targetMethod":{"type":"string"},"args":{"typeof":"function"},"returnData":{"type":"string"},"resultSelectedFields":{"typeof":"function"},"resultSelectionSet":{"type":"string"},"resultDepth":{"type":"number"}},"additionalProperties":false,"required":["field","targetMethod","targetSource","type"]},"AdditionalSubscriptionObject":{"type":"object","properties":{"type":{"type":"string"},"field":{"type":"string"},"pubsubTopic":{"type":"string"},"returnData":{"type":"string"},"filterBy":{"type":"string"}},"additionalProperties":false,"required":["field","pubsubTopic","type"]},"Cache":{"description":"Backend cache","$ref":"#/definitions/Cache_1"},"Cache_1":{"description":"Backend cache","type":"object","additionalProperties":{},"properties":{"file":{"$ref":"#/definitions/FileCacheConfig"},"inmemoryLRU":{"$ref":"#/definitions/InMemoryLRUConfig"},"localforage":{"$ref":"#/definitions/LocalforageConfig"},"redis":{"$ref":"#/definitions/RedisConfig"}}},"FileCacheConfig":{"$ref":"#/definitions/FileCacheConfig_1"},"FileCacheConfig_1":{"type":"object","properties":{"path":{"type":"string"}},"additionalProperties":false},"InMemoryLRUConfig":{"$ref":"#/definitions/InMemoryLRUConfig_1"},"InMemoryLRUConfig_1":{"type":"object","properties":{"max":{"type":"number"}},"additionalProperties":false},"LocalforageConfig":{"$ref":"#/definitions/LocalforageConfig_1"},"LocalforageConfig_1":{"type":"object","properties":{"driver":{"description":"Allowed values: WEBSQL, INDEXEDDB, LOCALSTORAGE","type":"array","items":{"enum":["INDEXEDDB","LOCALSTORAGE","WEBSQL"],"type":"string"}},"name":{"type":"string"},"version":{"type":"number"},"size":{"type":"number"},"storeName":{"type":"string"},"description":{"type":"string"}},"additionalProperties":false},"RedisConfig":{"$ref":"#/definitions/RedisConfig_1"},"RedisConfig_1":{"type":"object","properties":{"host":{"type":"string"},"port":{"type":"number"},"password":{"type":"string"}},"additionalProperties":false},"PubSubConfig":{"type":"object","properties":{"name":{"type":"string"},"config":{}},"additionalProperties":false,"required":["name"]}},"$schema":"http://json-schema.org/draft-07/schema#"}
